name: Build

on:
  push:
    branches: main
    tags:
    - v*
  pull_request:
    branches: '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install node
      uses: actions/setup-node@v1
      with:
       node-version: '16.x'
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
        architecture: 'x64'


    - name: Setup pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: pip-3.7-${{ hashFiles('package.json') }}
        restore-keys: |
          pip-3.7-
          pip-

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Setup yarn cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          yarn-

    - name: Install dependencies
      run: python -m pip install -U jupyterlab~=3.0 jupyter_packaging~=0.7.9
    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
    - name: build
      run: |
        python -m pip install build wheel jupyter_packaging
        python setup.py sdist
        python setup.py bdist_wheel

    - name: Publish distribution ðŸ“¦ to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

    - name: Publish distribution ðŸ“¦ to PyPI
      if: startsWith(github.ref, 'refs/tags/v')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
